---
- name: Copy SSL certificates to client
  ansible.builtin.include_tasks: copy_certs_to_client.yml
  when: xnat_container_service_use_ssl

- name: Configure XNAT to talk to container service
  ansible.builtin.uri:
    url: "{{ xnat_container_service_url }}"
    user: "{{ xnat_service_admin.username }}"
    password: "{{ xnat_service_admin.password }}"
    method: POST
    body_format: json
    body:
      name: "{{ xnat_container_service_name }}"
      host:
        tcp://{{ xnat_container_service_hostname }}:{{
        xnat_container_service_port }}
      cert-path:
        "{{ xnat_container_service_certificate_directory if
        xnat_container_service_use_ssl else '' }}"
      backend:
        "{{ 'swarm' if xnat_container_service_swarm_mode else 'docker' }}"
      swarm-mode: "{{ xnat_container_service_swarm_mode }}"
      max-concurrent-finalizing-jobs: 1
      path-translation-xnat-prefix:
        "{{ xnat_container_service_path_translation_xnat_prefix }}"
      path-translation-docker-prefix:
        "{{ xnat_container_service_path_translation_docker_prefix }}"
      pull-images-on-xnat-init: false
      container-user: ""
      auto-cleanup: true
    validate_certs: "{{ xnat_container_service_validate_certs }}"
    status_code: 200, 201

- name: Set up container service registries
  ansible.builtin.include_tasks: add_container_service_hub.yml
  vars:
    container_registry: "{{ item }}"
  loop: "{{ xnat_container_service_hubs | default([]) }}"

- name: Pull containers
  ansible.builtin.uri:
    url:
      "{{ web_server.url }}/xapi/docker/hubs/{{ item.hub_name }}/pull?image={{
      item.image }}&save-commands=true"
    user: "{{ xnat_service_admin.username }}"
    password: "{{ xnat_service_admin.password }}"
    method: POST
    body_format: json
    validate_certs: "{{ ssl.validate_certs }}"
    status_code: 200, 404
  loop: "{{ xnat_container_service_images | default([]) }}"
