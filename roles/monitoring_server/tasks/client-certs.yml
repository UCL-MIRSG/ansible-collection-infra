---
- name: Ensure monitoring cert dir exists on server
  ansible.builtin.file:
    path: "{{ monitoring_server_client_certificate_directory }}"
    state: directory
    owner: "{{ monitoring_server_cert_owner }}"
    group: "{{ monitoring_server_cert_group }}"
    mode: "0700"

- name: Generate OpenSSL client private key
  community.crypto.openssl_privatekey:
    path: "{{ monitoring_server_client_certificate_directory }}/key.pem"
    owner: "{{ monitoring_server_cert_owner }}"
    group: "{{ monitoring_server_cert_group }}"
    mode: "0400"

- name: Generate OpenSSL CSR for each client using private key
  community.crypto.openssl_csr:
    path: "{{ monitoring_server_client_certificate_directory }}/{{ item }}.csr"
    privatekey_path: "{{ monitoring_server_client_certificate_directory }}/key.pem"
    common_name: "{{ item }}"
  register: new_monitoring_client_csr_generated
  loop: "{{ monitoring_client_hostnames }}"

- name: Generate client certificates signed by server CA
  community.crypto.x509_certificate:
    path: "{{ monitoring_server_client_certificate_directory }}/{{ item }}.cert"
    csr_path: "{{ monitoring_server_client_certificate_directory }}/{{ item }}.csr"
    provider: ownca
    ownca_path: "{{ monitoring_server_ca_cert }}"
    ownca_privatekey_path: "{{ monitoring_server_ca_key }}"
    mode: "0400"
    owner: "{{ monitoring_server_cert_owner }}"
    group: "{{ monitoring_server_cert_owner }}"
  loop: "{{ monitoring_client_hostnames }}"

- name: Copy signed client certificates to temp dir on Ansible controller
  ansible.builtin.fetch:
    src: "{{ monitoring_server_client_certificate_directory }}/{{ item }}.cert"
    dest: "{{ monitoring_server_certificate_cache_directory }}/{{ item }}.cert"
    flat: true
  loop: "{{ monitoring_server_client_hostnames }}"

- name: Copy private key to temp dir on Ansible controller
  ansible.builtin.fetch:
    src: "{{ monitoring_server_client_certificate_directory }}/key.pem"
    dest: "{{ monitoring_server_certificate_cache_directory }}/key.pem"
    flat: true
