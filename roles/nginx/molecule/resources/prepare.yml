---
- name: Install sudo
  hosts: all
  gather_facts: true
  tasks:
    - name: Update YUM repo baseurls
      ansible.builtin.include_role:
        name: mirsg.infrastructure.provision
        tasks_from: RedHat7.yml
      when: ansible_facts['distribution_major_version'] is version('7')

    - name: Install sudo
      ansible.builtin.package:
        name: sudo
        state: present

- name: Install and configure Flask and Gunicorn
  hosts: all
  become: true
  gather_facts: true
  tasks:
    - name: Install python and Flask/Gunicorn dependencies
      ansible.builtin.include_role:
        name: mirsg.infrastructure.install_python

    - name: Copy Flask app to host
      ansible.builtin.copy:
        src: app.py
        dest: /home/app.py
        owner: root
        group: root
        mode: "0644"

    - name: Create Gunicorn service config
      ansible.builtin.template:
        src: gunicorn_service.j2
        dest: /etc/systemd/system/gunicorn.service
        owner: root
        group: root
        mode: "0644"
        force: true

    - name: Start Gunicorn service
      ansible.builtin.systemd:
        name: gunicorn
        state: restarted

- name: Add test certificates
  hosts: all
  become: true
  tasks:
    - name: Create the directory for Nginx certificates
      ansible.builtin.file:
        path: /etc/nginx/certs
        state: directory
        mode: "0700"
        owner: nginx
        group: nginx

    - name: Generate test certificate
      ansible.builtin.command:
        cmd:
          openssl req -new -x509 -key /etc/nginx/certs/test.key -out
          /etc/nginx/certs/test.crt -days 365 -subj '/CN=example.com'
      args:
        creates: /etc/nginx/certs/test.crt

    - name: Generate test private key
      ansible.builtin.command:
        cmd: openssl genrsa -out /etc/nginx/certs/test.key 2048
      args:
        creates: /etc/nginx/certs/test.key
