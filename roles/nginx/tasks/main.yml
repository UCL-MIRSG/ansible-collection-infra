---
- name: Configure SELinux if enabled and enforced
  when:
    ansible_selinux.status == "enabled" and ansible_selinux.mode == "enforcing"
  block:
    - name:
        Configure SELinux to allow nginx to listen on port {{
        nginx_upstream_listen_port }}
      community.general.seport:
        ports: "{{ nginx_upstream_listen_port }}"
        proto: tcp
        setype: http_port_t
        state: present
      when: nginx_upstream_listen_port is defined

    - name:
        Configure SELinux to allow httpd to act as relay and keep it persistent
        across reboots
      ansible.posix.seboolean:
        name: httpd_can_network_relay
        state: true
        persistent: true
      when:
        ansible_facts['os_family'] == "RedHat" and
        ansible_facts['distribution_major_version'] is version("8", ">=")

- name: Ensure epel is installed
  ansible.builtin.yum:
    name: epel-release
    state: installed

- name: Ensure nginx is installed
  ansible.builtin.yum:
    name:
      - nginx
      - nginx-mod-stream
    state: installed

- name: Ensure nginx certs directory exists
  ansible.builtin.file:
    path: "{{ nginx_certs_dir }}"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    state: directory
    mode: "0700"
  when: nginx_use_ssl

- name: Copy server certificates to nginx
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    mode: "0600"
  with_items:
    - src: "{{ nginx_server_cert_cache }}"
      dest: "{{ nginx_ssl_cert_file }}"
    - src: "{{ nginx_server_key_cache }}"
      dest: "{{ nginx_ssl_key_file }}"
  notify: Reload nginx
  when: nginx_use_ssl

- name:
    Generate Diffie-Hellman (DH) parameters. Number of {{
    nginx_diffie_helman_size_bits }}.
  community.crypto.openssl_dhparam:
    path: "{{ nginx_dh_params_file }}"
    size: "{{ nginx_diffie_helman_size_bits }}"
  notify: Reload nginx
  when: nginx_use_ssl

- name: Copy nginx config file
  ansible.builtin.template:
    src: "{{ nginx_conf_template }}"
    dest: "{{ nginx_conf_file }}"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    mode: "0644"
    force: true
  notify: Reload nginx

- name: Ensure nginx is running
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
