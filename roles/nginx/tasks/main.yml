---
- name: Configure SELinux if enabled and enforced
  when: ansible_selinux.status == "enabled" and ansible_selinux.mode == "enforcing"
  block:
    - name: Configure SELinux to allow nginx to listen on port {{ dicom_port }}
      community.general.seport:
        ports: "{{ dicom_port }}"
        proto: tcp
        setype: http_port_t
        state: present

    - name: Configure SELinux to allow httpd to act as relay and keep it persistent across reboots
      ansible.posix.seboolean:
        name: httpd_can_network_relay
        state: true
        persistent: true
      when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version'] is version("8", ">=")

- name: Ensure epel is installed
  ansible.builtin.yum:
    name: "epel-release"
    state: installed

- name: Ensure nginx is installed
  ansible.builtin.yum:
    name: ["nginx", "nginx-mod-stream"]
    state: installed

- name: Ensure nginx certs directory exists
  ansible.builtin.file:
    path: "{{ nginx.certs_dir }}"
    owner: "{{ nginx.owner }}"
    group: "{{ nginx.group }}"
    state: directory
    mode: "0700"

- name: Copy server certificates to nginx
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ nginx.owner }}"
    group: "{{ nginx.group }}"
    mode: "0600"
  with_items:
    - { src: "{{ ssl.server_cert }}", dest: "{{ nginx.ssl_cert_file }}" }
    - { src: "{{ ssl.server_key }}", dest: "{{ nginx.ssl_key_file }}" }
  notify: Reload nginx
  when: ssl.use_ssl

- name: Generate Diffie-Hellman (DH) parameters. Number of {{ diffie_helman_size_bits }}.
  community.crypto.openssl_dhparam:
    path: "{{ nginx.dh_params_file }}"
    size: "{{ diffie_helman_size_bits }}"
  notify: Reload nginx

- name: Copy nginx config file
  ansible.builtin.template:
    src: "nginx.j2"
    dest: "{{ nginx.conf_file }}"
    owner: "{{ nginx.owner }}"
    group: "{{ nginx.group }}"
    mode: "0644"
    force: true
  notify: Reload nginx

- name: Ensure nginx is running
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
