---
- name: Verify XNAT instance is running
  hosts: localhost
  tasks:
    - name: Get server status
      ansible.builtin.uri:
        url: http://localhost:8080
        method: GET
        validate_certs: false
        return_content: true
      register: response

    - name: Check server status and response
      ansible.builtin.assert:
        that:
          - response.status == 200
          - response.server == "nginx"
          - response.content is search('MIRSG XNAT')

- name: Verify correct Docker version is installed
  hosts: xnat_cserv
  tasks:
    - name: Get Docker server version
      ansible.builtin.command:
        cmd: "{% raw %}docker version -f '{{.Server.Version}}'{% endraw %}"
      changed_when: false
      register: server_version

    - name: Get Docker client version
      ansible.builtin.command:
        cmd: "{% raw %}docker version -f '{{.Client.Version}}'{% endraw %}"
      changed_when: false
      register: client_version

    - name: Check Docker server version
      ansible.builtin.assert:
        that:
          - server_version.stdout is version( docker_version )
          - client_version.stdout is version( docker_version )

- name: Verify container service is running
  hosts: localhost
  tasks:
    - name: Check container service is running
      ansible.builtin.uri:
        url: http://localhost:8080/xapi/docker/server/ping
        user: "{{ xnat_service_admin.username }}"
        password: "{{ xnat_service_admin.password }}"
        method: GET
        validate_certs: false
        status_code:
          - 200

    - name: Upload sample image to the Container Service
      ansible.builtin.uri:
        user: "{{ xnat_service_admin.username }}"
        password: "{{ xnat_service_admin.password }}"
        url: http://localhost:8080/xapi/docker/pull?image=xnat/dcm2niix:latest&save-commands=true
        method: POST
        validate_certs: false
        status_code:
          - 200

    - name: Get all Docker images
      ansible.builtin.uri:
        url: http://localhost:8080/xapi/docker/images
        user: "{{ xnat_service_admin.username }}"
        password: "{{ xnat_service_admin.password }}"
        method: GET
        validate_certs: false
        status_code:
          - 200
      register: response

    - name: Check for sample image
      ansible.builtin.assert:
        that:
          - response.json[0].tags[0] == "xnat/dcm2niix:latest"
