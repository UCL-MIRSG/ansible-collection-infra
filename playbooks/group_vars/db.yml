---
# mirsg.infrastructure.postgresql - setting up the database
postgresql_database:
  database_name: "{{ db_server.postgresql_database }}"
  user_name: "{{ db_server.postgresql_user }}"
  user_password: "{{ db_server.postgresql_password }}"

# mirsg.infrastructure.postgresql - connections and authentication
postgresql_connection:
  host: "{{ db_server.host }}"
  port: "{{ db_server.port }}"
  client_ip: "{{ web_server.ip }}"
  client_certificate_filename: "/var/lib/pgsql/certs/root.crt" # required if using SSL, where to copy the client certificate to on the server
  listen_addresses: "{{ db_server.listen_addresses | default('localhost, ' + db_server.host) | quote }}"
  subnet_mask: "{{ web_server.subnet_mask | default('255.255.255.255') }}"

# mirsg.infrastructure.postgresql - storage
postgresql_storage:
  storage_directory: "{{ db_server.storage_dir }}"
  data_directory: "{{ db_server.data_dir }}" # symlink to data_directory

# mirsg.infrastructure.postgresql - backup
postgresql_backup:
  directory: "{{ db_server.backups_dir }}"
  script: "{{ postgresql.base_directory }}/run_db_backup.sh" # script to run cron backup job

# mirsg.infrastructure.ssl_certificates
postgresql_ssl_certificate:
  owner: "{{ postgresql.owner }}"
  group: "{{ postgresql.owner }}"
  certificate_directory: "{{ postgresql.base_directory }}/certs"
  privatekey_filename: "{{ postgresql.base_directory }}/certs/server.key"
  use_pk8: false
  csr_filename: "{{ postgresql.base_directory }}/certs/server.csr"
  csr_common_name: "{{ db_server.host }}"
  certificate_filename: "{{ postgresql.base_directory }}/certs/server.crt"
  provider: "selfsigned"
  cache_filename: "{{ database_server_certificate_cache_filename }}" # where to store the server certificate in cache

firewalld_rich_rules:
  - zone: "internal"
    rule: "family=ipv4 source address={{ web_server.subnet | default(web_server.ip + '/32') }} port protocol=tcp port={{ db_server.port }} accept"

# mirsg.infrastructure.firewalld
firewalld_internal_zone_sources:
  - "{{ web_server.subnet | default(web_server.ip + '/32') }}"

firewalld_internal_zone_open_services:
  - "postgresql"
