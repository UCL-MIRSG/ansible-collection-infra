upstream omeroweb {
    server 127.0.0.1:4080 fail_timeout=0;
}

{% if nginx_use_ssl %}
server {
    listen {{ nginx_http_port }};

    server_name {{ web_server.host }};
    return 301 https://{{ web_server.host }}:{{ nginx_https_port }}$request_uri;
}
{% endif %}
server {
    listen 80;
    server_name 127.0.0.1;

    sendfile on;
    client_max_body_size 0;

{% if nginx_use_ssl %}
    # OMERO.web SSL configuration
    listen 443 ssl;

    ssl_certificate {{ nginx_ssl_cert_file }};
    ssl_certificate_key {{ nginx_ssl_key_file }};

    # TLS 1.0 and TLS 1.1 should be disabled
    # TLS 1.3 may not be supported by Centos7
    ssl_protocols TLSv1.2;

    # Increase the cache lifetime to improve performance; this requires a larger cache size
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;

    # Configure ciphers
    ssl_prefer_server_ciphers on;

    # Mozilla intermediate compatibility for TLS1.2
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384s";

    # Enable HSTS - this requests browsers to only contact the server using TLS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
{% endif %}
    # maintenance page serve from here
    location @maintenance {
        root /opt/omero/web/OMERO.web/etc/templates/error;
        try_files $uri /maintenance.html =502;
    }

    # weblitz django apps serve media from here
    location /static {
        alias /opt/omero/web/OMERO.web/var/static;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://omeroweb;
    }

    location / {
        error_page 502 @maintenance;
        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }
}
